{"version":3,"sources":["lib/defaultClient.js","lib/api.js","modules/login.js","components/Login/LoginInput/LoginInput.jsx","components/Login/LoginButton/LoginButton.jsx","components/Login/LoginBox/LoginBox.jsx","components/Login/LoginTemplate.jsx","containers/LoginContainer.jsx","pages/Login.jsx","lib/withCheckAuth.js","components/Main/MainTemplate.jsx","components/Main/Header/HeaderItem.jsx","components/Main/Header/Header.jsx","components/Main/Home/Title.jsx","components/Main/Home/Dashboard.jsx","pages/main/Home.jsx","components/Main/Graph/MenuItem.jsx","components/Main/Graph/LeftMenu.jsx","pages/main/graphs/Synthesis.jsx","pages/main/graphs/CheckServer.jsx","pages/main/graphs/SefilCare.jsx","pages/main/graphs/Zabbix.jsx","pages/main/Graph.jsx","modules/stats.js","containers/StatisticsContainer.jsx","pages/main/Statistics.jsx","pages/main/Setting.jsx","pages/Main.jsx","pages/NotFound.jsx","App.jsx","Root.jsx","modules/index.js","store.js","serviceWorker.js","index.js"],"names":["axios","defaults","withCredentials","baseURL","process","APP_ENV","LOCAL","defaultClient","create","timeout","getHomeDashboard","_ref2","uid","auth","get","params","getSynthesisGraph","_ref3","getCheckServerGraph","_ref4","getSefilCareGraph","_ref5","getZabbixGraph","_ref6","setId","createAction","setPw","loginProc","_ref","id","pw","post","handleActions","Object","objectSpread","_objectSpread2","defineProperty","state","payload","produce","draft","pender","type","onSuccess","result","data","onFailure","response","alert","cx","classNames","bind","styles","LoginInput","onKeyPress","onChange","react_default","a","createElement","className","name","placeholder","Button","onClick","Wrapper","styled","div","_templateObject","Area","_templateObject2","FlexCol","_templateObject3","LoginBox","Login_LoginInput_LoginInput","LoginButton_LoginButton","Container","LoginTemplate_templateObject","MainTitle","span","LoginTemplate_templateObject2","Row","LoginTemplate_templateObject3","Footer","_templateObject4","Alert","_templateObject5","LoginTemplate","Login_LoginBox_LoginBox","LoginContainer","handleChange","e","_e$target","target","value","LoginActions","_this","props","handleKeyPress","key","handleClick","_callee","_this$props","history","_response$data","expired","regenerator_default","wrap","_context","prev","next","sent","sessionStorage","push","setClearForm","clear","t0","console","error","stop","this","_document$getElements","document","getElementsByTagName","focus","Login_LoginTemplate","Component","connect","login","dispatch","bindActionCreators","loginActions","Login","containers_LoginContainer","withCheckAuth","WrappedComponent","_Component","_class","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","_sessionStorage","Redirect","to","MainTemplate_templateObject","Main","section","MainTemplate_templateObject2","column","withRouter","header","children","pathname","location","MainTemplate_Container","MainTemplate_Main","HeaderItem","nextProps","highlighted","link","onActive","Link","Header","navList","idx","activeMenu","length","undefined","toggledNavList","map","nav","indexOf","setState","toConsumableArray","handleActive","NavLinks","Header_HeaderItem","StyledTitle","Title_templateObject","Text","Title_templateObject2","Title","ChartContainer","Dashboard_templateObject","Dashboard","chartData","es6","width","height","margin","top","right","left","bottom","vertical","dataKey","tickMargin","axisLine","tickLine","iconType","stroke","strokeWidth","activeDot","r","animationDuration","Home","componentDidMount","message","_sessionStorage2","react","Home_Title","Home_Dashboard","MenuItem","LeftMenu","Graph_MenuItem","Synthesis","log","CheckServer","labels","datasets","backgroundColor","hoverBackgroundColor","options","title","display","text","fontSize","fontStyle","legend","position","boxWidth","padding","layout","keys","values","_this$state","style","react_chartjs_2_es","SefilCare","Zabbix","Graph","Main_Graph_LeftMenu","Switch","Route","path","component","NotFound","setServiceCd","setStatus","setPeriod","getLogData","selOptions","stats_objectSpread2","serviceCd","status","period","StatisticsContainer","StatsActions","stats","statsActions","Statistics","containers_StatisticsContainer","Setting","Main_MainTemplate","Main_Header_Header","App_templateObject","App","App_Wrapper","exact","Root","BrowserRouter","src_App","combineReducers","penderReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","createLogger","penderMiddleware","store","createStore","modules","applyMiddleware","Boolean","hostname","match","ReactDOM","render","es","Root_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15eebfc1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst baseURL = (() => {\r\n    if (process.env.NODE_ENV === 'development') return 'http://localhost';\r\n    if (process.env.APP_ENV === 'server' && process.env.LOCAL === 'true') {\r\n    return 'http://localhost';\r\n    }\r\n    return 'https://146.148.76.237';\r\n})();\r\n\r\nconst defaultClient = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n\r\nif (process.env.APP_ENV === 'server') {\r\n    defaultClient.defaults.timeout = 3000;\r\n}\r\n\r\nexport default defaultClient;","import axios from './defaultClient';\r\n\r\nexport const loginProcApi = ({id, pw}) => {\r\n    return axios.post(`/auth/loginProc`, {\r\n        id,\r\n        pw,\r\n    });\r\n}\r\n\r\nexport const getHomeDashboard = ({uid, auth}) => {\r\n    return axios.get(`/home/dashboard`, { params: {uid, auth} });\r\n}\r\n\r\nexport const getSynthesisGraph = ({uid, auth}) => {\r\n    return axios.get(`/graph/synthesis`, { params: {uid, auth} });\r\n}\r\n\r\nexport const getCheckServerGraph = ({uid, auth}) => {\r\n    return axios.get(`/graph/checkserver`, { params: {uid, auth} });\r\n}\r\n\r\nexport const getSefilCareGraph = ({uid, auth}) => {\r\n    return axios.get(`/graph/sefilcare`, { params: {uid, auth} });\r\n}\r\n\r\nexport const getZabbixGraph = ({uid, auth}) => {\r\n    return axios.get(`/graph/zabbix`, { params: {uid, auth} });\r\n}\r\n\r\nexport const getLogStats = (selOptions) => {\r\n    return axios.post(`/stats/log`, selOptions);\r\n}","import produce from 'immer';\r\nimport { handleActions, createAction } from 'redux-actions';\r\nimport { pender } from 'redux-pender';\r\nimport { loginProcApi } from '../lib/api';\r\n\r\nconst SET_ID = 'login/SET_ID';\r\nconst SET_PW = 'login/SET_PW';\r\nconst LOGIN_PROC = 'login/LOGIN_PROC';\r\n\r\nexport const setId = createAction(SET_ID);\r\nexport const setPw = createAction(SET_PW);\r\nexport const loginProc = createAction(LOGIN_PROC, loginProcApi);\r\n\r\nconst initialState = {\r\n    id: '',\r\n    pw: '',\r\n    data: {\r\n        result: 'FAIL'\r\n    },\r\n};\r\n\r\nexport default handleActions({\r\n    [SET_ID]: (state, { payload }) => {\r\n        return produce(state, draft => {\r\n            draft.id = payload;\r\n        })\r\n    },\r\n    [SET_PW]: (state, { payload }) => {\r\n        return produce(state, draft => {\r\n            draft.pw = payload;\r\n        });\r\n    },\r\n    ...pender({\r\n        type: LOGIN_PROC,\r\n        onSuccess: (state, { payload: { data } }) => { \r\n            const { result } = data;\r\n\r\n            return produce(state, draft => {\r\n                if(result === \"FAIL\") {\r\n                    draft.id = '';\r\n                    draft.pw = '';\r\n                }\r\n                draft.data.result = result;\r\n            });\r\n        },\r\n        onFailure: (state, { payload: { response } }) => { \r\n            alert('서버 에러! 관리자에게 문의하세요');\r\n        },\r\n    })\r\n}, initialState);","import React from 'react';\r\nimport styles from './LoginInput.scss';\r\nimport classNames from 'classnames/bind';\r\nconst cx = classNames.bind(styles);\r\n\r\nconst LoginInput = ({ onKeyPress, onChange }) => {\r\n    return (\r\n        <div className={cx('row')}>\r\n            <label className={cx('styled-label')}>ID</label>\r\n            <input className={cx('styled-input')} type=\"text\" name=\"id\" placeholder=\"아이디\" onChange={onChange}/>\r\n            <label className={cx('styled-label')}>Password</label>\r\n            <input className={cx('styled-input')} type=\"password\" name=\"pw\" placeholder=\"비밀번호\" onKeyPress={onKeyPress} onChange={onChange}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginInput;","import React from 'react';\r\nimport styles from './LoginButton.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <button className={cx('login-button')} onClick={onClick}>LOGIN</button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport LoginInput from '../LoginInput';\r\nimport LoginButton from '../LoginButton';\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: rgba(255,255,255,0.5);\r\n    padding: 2rem 1rem;\r\n    margin-top: 4rem;\r\n    width: 40%;\r\n`;\r\n\r\nconst Area = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100px;\r\n`;\r\n\r\nconst FlexCol = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 80%;\r\n`;\r\n\r\nconst LoginBox = ({ onKeyPress, onClick, onChange }) => {\r\n    return (\r\n        <Wrapper>\r\n            <Area>\r\n                <FlexCol>\r\n                    <LoginInput onKeyPress={onKeyPress} onChange={onChange}/>\r\n                </FlexCol>\r\n                <LoginButton onClick={onClick}/>\r\n            </Area>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default LoginBox;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport LoginBox from './LoginBox';\r\n\r\nconst Container = styled.div`\r\n    padding: 2em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n`;\r\n\r\nconst MainTitle = styled.span`\r\n    margin-top: 120px;\r\n    color: #fff;\r\n    font-size: 8rem;\r\n    display: inline-block;\r\n`;\r\n\r\nconst Row = styled.div`\r\n    display: block;\r\n    width: 100%;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst Alert = styled.span`\r\n    color: #fff;\r\n    font-size: 1rem;\r\n`;\r\n\r\nconst LoginTemplate = ({ onKeyPress, onClick, onChange }) => {\r\n    return (\r\n        <section>\r\n            <Container>\r\n                <MainTitle>test</MainTitle>\r\n                <LoginBox onKeyPress={onKeyPress} onClick={onClick} onChange={onChange}></LoginBox>\r\n            </Container>\r\n            <Footer>\r\n                <Row>\r\n                    <Alert>이 시스템은 권한이 허락된 사용자만이 접근할 수 있습니다.</Alert>\r\n                </Row>\r\n            </Footer>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default LoginTemplate;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as loginActions from '../modules/login';\r\nimport LoginTemplate from '../components/Login/LoginTemplate';\r\n\r\nclass LoginContainer extends Component {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        pw: PropTypes.string.isRequired,\r\n        result: PropTypes.string,\r\n        LoginActions: PropTypes.object.isRequired,\r\n    }\r\n\r\n    /**\r\n     * 아이디, 패스워드값을 redux store에 저장한다.\r\n     * @param e: chnage event\r\n     */\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        const { LoginActions } = this.props;\r\n        (name === 'id') ? LoginActions.setId(value) : LoginActions.setPw(value);\r\n    }\r\n\r\n    /**\r\n     * 패스워드 입력후 엔터를 누르면 버튼 click이벤트를 발생시킨다.\r\n     * @param e: chnage event\r\n     */\r\n    handleKeyPress = (e) => {\r\n        if(e.key === 'Enter') {\r\n            this.handleClick();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 로그인 이벤트를 발생시킨다.\r\n     */\r\n    handleClick = async () => {\r\n        const { LoginActions, id, pw, history } = this.props;\r\n        try {\r\n            // 서버에 아이디, 패스워드값을 보내 로그인 인증처리\r\n            const response = await LoginActions.loginProc({id, pw});\r\n            const { result, uid, auth, expired } = response.data;\r\n\r\n            if(result === \"SUCCESS\") {\r\n                // 필요한 사용자 정보를 세션 스토리지에 담는다.\r\n                sessionStorage.uid = uid;\r\n                sessionStorage.auth = auth;\r\n                sessionStorage.expired = expired;\r\n                history.push('/main');\r\n            } else {\r\n                alert('아이디와 패스워드를 확인해주세요');\r\n                this.setClearForm();\r\n                sessionStorage.clear();\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    // 입력창 clear\r\n    setClearForm = () => {\r\n        let { id, pw } = document.getElementsByTagName('input');\r\n        id.value = '';\r\n        pw.value = '';\r\n\r\n        id.focus();\r\n    }\r\n\r\n    render() {\r\n        const { handleKeyPress, handleClick, handleChange} = this;\r\n        return (\r\n            <LoginTemplate onKeyPress={handleKeyPress} onClick={handleClick} onChange={handleChange}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        id: state.login.id,\r\n        pw: state.login.pw,\r\n        result: state.login.data.result\r\n    }),\r\n    (dispatch) => ({\r\n        LoginActions: bindActionCreators(loginActions, dispatch),\r\n    })\r\n)(LoginContainer);","import React from 'react';\r\nimport LoginContainer from '../containers/LoginContainer';\r\n\r\nconst Login = ({ history }) => {\r\n    return (\r\n        <LoginContainer history={history}/>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst withCheckAuth = (WrappedComponent) => {\r\n  return class extends Component {\r\n    render() {\r\n      const { uid, auth, expired } = sessionStorage;\r\n      if(uid && auth && expired) {\r\n        return (\r\n          <WrappedComponent {...this.props}/>\r\n        )\r\n      } else {\r\n        return (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default withCheckAuth;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 80%;\r\n    height: 100%;\r\n    margin: auto;\r\n`;\r\n\r\nconst Main = styled.section`\r\n    display: flex;\r\n    flex-direction: ${props => props.column? 'column' : 'row'}\r\n    height: 80%;\r\n    background-color: #fff;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst MainTemplate = ({ header, children, location: { pathname } }) => {\r\n    return (\r\n        <Container>\r\n            {header}\r\n            {\r\n                (pathname === '/main/home' || pathname === '/main/stats')? <Main column>{children}</Main> : <Main>{children}</Main>\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default withRouter(MainTemplate);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Header.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass HeaderItem extends Component {\r\n    shouldComponentUpdate(nextProps) {\r\n        return this.props.highlighted !== nextProps.highlighted;\r\n    }\r\n\r\n    render() {\r\n        const { link, name, highlighted, onActive } = this.props;\r\n        return (\r\n            <div className={cx('nav-link', {highlighted})}>\r\n                <Link to={link} onClick={onActive}>{name}</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderItem;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport HeaderItem from './HeaderItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Header extends Component {\r\n    static propTypes = {\r\n        navList: PropTypes.array\r\n    };\r\n\r\n    state = {\r\n        navList : [\r\n            {idx: 0, link: \"/main/home\", name: \"Home\", highlighted: true},\r\n            {idx: 1, link: \"/main/graph\", name: \"Graph\", highlighted: false},\r\n            {idx: 2, link: \"/main/stats\", name: \"Statistics\", highlighted: false},\r\n            {idx: 3, link: \"/main/setting\", name: \"Setting\", highlighted: false}\r\n        ]\r\n    };\r\n\r\n    /**\r\n     * 현재 보여지는 메뉴의 css값 변경\r\n     * @param idx: 선택된 메뉴 인덱스\r\n     * @param pathname: 메뉴 url \r\n     */\r\n    activeMenu = (idx, pathname=\"\") => {\r\n        const { navList } = this.state;\r\n        const toggledNavList = navList.map(nav => {\r\n            if(nav.idx === idx || ~pathname.indexOf(nav.link)) {\r\n                return {\r\n                    ...nav,\r\n                    highlighted: true\r\n                }\r\n            } else {\r\n                return {\r\n                    ...nav,\r\n                    highlighted: false\r\n                }\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            navList: [...toggledNavList]\r\n        });\r\n    }\r\n\r\n    handleActive = (idx) => {\r\n        this.activeMenu(idx);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { location: {pathname}, history } = this.props;\r\n        \r\n        // 로그인 직후 /main 경로로 redirect되면 home component를 보여준다.\r\n        if(pathname === '/main') {\r\n            history.push('/main/home');\r\n        } else { // 새로고침시에도 path따라 css를 바꿔준다.\r\n            this.activeMenu(undefined, pathname);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleActive, state: { navList }} = this;\r\n        const NavLinks = navList.map(\r\n            nav => (\r\n                <HeaderItem\r\n                    key={nav.idx}\r\n                    link={nav.link}\r\n                    name={nav.name}\r\n                    highlighted={nav.highlighted}\r\n                    onActive={() => handleActive(nav.idx)}\r\n                />\r\n            )\r\n        )\r\n        return (\r\n            <nav className='header'>\r\n                {NavLinks}\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTitle = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    margin-top: 15px;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    border: 1px solid #000;\r\n    height: 70px;\r\n    line-height: 70px;\r\n    width: 95%;\r\n    text-align: center;\r\n    font-size: 1.5rem;\r\n`;\r\n\r\nconst Title = ({children}) => {\r\n    return (\r\n        <StyledTitle>\r\n            <Text>{children}</Text>\r\n        </StyledTitle>\r\n    );\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ComposedChart  } from 'recharts';\r\n\r\nconst ChartContainer = styled.div`\r\n    width: 95%;\r\n    height: 80%;\r\n    margin: auto;\r\n`;\r\n\r\nconst Dashboard = ({chartData}) => {\r\n    return (\r\n      <ChartContainer>\r\n          <ResponsiveContainer width='100%' height='100%'>\r\n              <ComposedChart \r\n                  data={chartData}\r\n                  margin={{\r\n                      top: 5, right: 30, left: 20, bottom: 5,\r\n                  }}\r\n              >\r\n                  <CartesianGrid vertical={false} />\r\n                  <XAxis dataKey=\"week\" tickMargin={10}/>\r\n                  <YAxis axisLine={false} tickLine={false}/>\r\n                  <Tooltip />\r\n                  <Legend iconType=\"rect\" height={100}/>\r\n                  <Line type=\"linear\" dataKey=\"data.ZABBIX\" name=\"자빅스\" stroke=\"#cecece\" strokeWidth=\"7\" activeDot={{ r: 5 }} animationDuration={0}/>\r\n                  <Line type=\"linear\" dataKey=\"data.POSTMAN\" name=\"포스트맨\" stroke=\"#ffcc00\" strokeWidth=\"7\" activeDot={{ r: 5 }} animationDuration={0}/>\r\n                  <Line type=\"linear\" dataKey=\"data.SEFILCARE\" name=\"세필케어\" stroke=\"#ff6600\" strokeWidth=\"7\" activeDot={{ r: 5 }} animationDuration={0}/>\r\n                  <Line type=\"linear\" dataKey=\"data.CHECKSERVER\" name=\"체크서버\" stroke=\"#008ae6\" strokeWidth=\"7\" activeDot={{ r: 5 }} animationDuration={0}/>\r\n              </ComposedChart >\r\n          </ResponsiveContainer>\r\n      </ChartContainer>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React, { Component, Fragment } from 'react';\r\nimport { Title, Dashboard } from '../../components/Main/Home/';\r\nimport { getHomeDashboard } from '../../lib/api';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        chartData: []\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const { uid, auth } = sessionStorage;\r\n        try{\r\n            const response = await getHomeDashboard({uid, auth});\r\n            const { result, chartData, message } = response.data;\r\n    \r\n            if(result === \"SUCCESS\") {\r\n                this.setState({\r\n                    chartData: [...chartData]\r\n                })\r\n            } else {\r\n                console.error(response);\r\n                alert(message);\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n            alert(\"관리자에게 문의하세요!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { uid, auth } = sessionStorage;\r\n        return (\r\n            <Fragment>\r\n                <Title>{uid}님 환영합니다! 귀하의 권한은 Level{auth}입니다.</Title>\r\n                <Dashboard chartData={this.state.chartData}/>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './LeftMenu.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass MenuItem extends Component {\r\n    shouldComponentUpdate(nextProps) {\r\n        return this.props.highlighted !== nextProps.highlighted;\r\n    }\r\n\r\n    render() {\r\n        const { link, name, highlighted, onActive } = this.props;\r\n        return (\r\n            <div className={cx('nav-link', {highlighted})}>\r\n                <Link to={link} onClick={onActive}>{name}</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuItem;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport MenuItem from './MenuItem';\r\n\r\nclass LeftMenu extends Component {\r\n    state = {\r\n        navList : [\r\n            {idx: 0, link: \"/main/graph/synthesis\", name: \"Main\", highlighted: true},\r\n            {idx: 1, link: \"/main/graph/checkserver\", name: \"Check Server\", highlighted: false},\r\n            {idx: 2, link: \"/main/graph/sefilcare\", name: \"SefilCare\", highlighted: false},\r\n            {idx: 3, link: \"/main/graph/zabbix\", name: \"Zabbix\", highlighted: false}\r\n        ]\r\n    };\r\n\r\n    /**\r\n     * 현재 보여지는 메뉴의 css값 변경\r\n     * @param idx: 선택된 메뉴 인덱스\r\n     * @param pathname: 메뉴 url \r\n     */\r\n    activeMenu = (idx, pathname=\"\") => {\r\n        const { navList } = this.state;\r\n        const toggledNavList = navList.map(nav => {\r\n            if(nav.idx === idx || ~pathname.indexOf(nav.link)) {\r\n                return {\r\n                    ...nav,\r\n                    highlighted: true\r\n                }\r\n            } else {\r\n                return {\r\n                    ...nav,\r\n                    highlighted: false\r\n                }\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            navList: [...toggledNavList]\r\n        });\r\n    }\r\n\r\n    handleActive = (idx) => {\r\n        this.activeMenu(idx);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { location: {pathname}, history } = this.props;\r\n        \r\n        // 로그인 직후 /main 경로로 redirect되면 home component를 보여준다.\r\n        if(pathname === '/main/graph') {\r\n            history.push('/main/graph/synthesis');\r\n        } else { // 새로고침시에도 path따라 css를 바꿔준다.\r\n            this.activeMenu(undefined, pathname);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleActive, state: { navList }} = this;\r\n        const NavLinks = navList.map(\r\n            nav => (\r\n                <MenuItem\r\n                    key={nav.idx}\r\n                    link={nav.link}\r\n                    name={nav.name}\r\n                    highlighted={nav.highlighted}\r\n                    onActive={() => handleActive(nav.idx)}\r\n                />\r\n            )\r\n        )\r\n        return (\r\n            <div className='leftMenu'>\r\n                {NavLinks}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LeftMenu);","import React, { Component, Fragment } from 'react';\r\nimport { getSynthesisGraph } from '../../../lib/api';\r\n\r\nclass Synthesis extends Component {\r\n    state = {\r\n        chartData: {}\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const { uid, auth } = sessionStorage;\r\n        try{\r\n            const response = await getSynthesisGraph({uid, auth});\r\n            const { result, chartData, message } = response.data;\r\n    \r\n            if(result === \"SUCCESS\") {\r\n                console.log(chartData);\r\n                this.setState({\r\n                    chartData: {...chartData}\r\n                })\r\n            } else {\r\n                console.error(response);\r\n                alert(message);\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n            alert(\"관리자에게 문의하세요!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Synthesis;","import React, { Component } from 'react';\r\nimport { getCheckServerGraph } from '../../../lib/api';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport produce from 'immer';\r\n\r\nclass CheckServer extends Component {\r\n    state = {\r\n        chartData: {\r\n            labels: [],\r\n            datasets: [{\r\n                data: [],\r\n                backgroundColor: [\r\n                    '#008ae6',\r\n                    '#cecece',\r\n                    '#ffcc00',\r\n                    '#ff6600',\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    '#008ae6',\r\n                    '#cecece',\r\n                    '#ffcc00',\r\n                    '#ff6600',\r\n                ]\r\n            }]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'HTTP Error',\r\n                fontSize: 40,\r\n                fontStyle: 'normal',\r\n            },\r\n            legend: {\r\n                display: true,\r\n                position: 'bottom',\r\n                labels: {\r\n                    fontSize: 20,\r\n                    boxWidth: 20,\r\n                    padding: 20,\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 0,\r\n                    right: 0,\r\n                    top: 70,\r\n                    bottom: 0\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const { uid, auth } = sessionStorage;\r\n        try{\r\n            const response = await getCheckServerGraph({uid, auth});\r\n            const { result, chartData, message } = response.data;\r\n    \r\n            if(result === \"SUCCESS\") {\r\n                const [ labels, data ] = [ Object.keys(chartData), Object.values(chartData) ];\r\n                \r\n                this.setState(\r\n                    produce(draft => {\r\n                        draft.chartData.labels = labels;\r\n                        draft.chartData.datasets[0].data = data;\r\n                    })\r\n                );\r\n            } else {\r\n                console.error(response);\r\n                alert(message);\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n            alert(\"관리자에게 문의하세요!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { chartData, options } = this.state;\r\n        return (\r\n            <div style={{width: \"80%\"}}>\r\n                <Pie data={chartData} width={300} options={options}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CheckServer;","import React, { Component, Fragment } from 'react';\r\nimport { getSefilCareGraph } from '../../../lib/api';\r\n\r\nclass SefilCare extends Component {\r\n    state = {\r\n        chartData: {}\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const { uid, auth } = sessionStorage;\r\n        try{\r\n            const response = await getSefilCareGraph({uid, auth});\r\n            const { result, chartData, message } = response.data;\r\n    \r\n            if(result === \"SUCCESS\") {\r\n                console.log(chartData);\r\n                this.setState({\r\n                    chartData: {...chartData}\r\n                })\r\n            } else {\r\n                console.error(response);\r\n                alert(message);\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n            alert(\"관리자에게 문의하세요!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SefilCare;","import React, { Component, Fragment } from 'react';\r\nimport { getZabbixGraph } from '../../../lib/api';\r\n\r\nclass Zabbix extends Component {\r\n    state = {\r\n        chartData: {}\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const { uid, auth } = sessionStorage;\r\n        try{\r\n            const response = await getZabbixGraph({uid, auth});\r\n            const { result, chartData, message } = response.data;\r\n    \r\n            if(result === \"SUCCESS\") {\r\n                console.log(chartData);\r\n                this.setState({\r\n                    chartData: {...chartData}\r\n                })\r\n            } else {\r\n                console.error(response);\r\n                alert(message);\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n            alert(\"관리자에게 문의하세요!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Zabbix;","import React, { Component, Fragment } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { LeftMenu } from '../../components/Main/Graph/';\r\nimport { Synthesis, CheckServer, SefilCare, Zabbix } from './graphs';\r\nimport { NotFound } from 'pages';\r\nclass Graph extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <LeftMenu />\r\n                <Switch>\r\n                    <Route path=\"/main/graph/synthesis\" component={Synthesis}></Route>\r\n                    <Route path=\"/main/graph/checkserver\" component={CheckServer}></Route>\r\n                    <Route path=\"/main/graph/sefilcare\" component={SefilCare}></Route>\r\n                    <Route path=\"/main/graph/zabbix\" component={Zabbix}></Route>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Graph;","import produce from 'immer';\r\nimport { handleActions, createAction } from 'redux-actions';\r\nimport { pender } from 'redux-pender';\r\nimport { getLogStats } from '../lib/api';\r\n\r\nconst SET_SERVICE = 'stats/SET_SERVICE';\r\nconst SET_STATUS = 'stats/SET_STATUS';\r\nconst SET_PERIOD = 'stats/SET_PERIOD';\r\nconst GET_LOGDATA = 'stats/GET_LOGDATA';\r\n\r\nexport const setServiceCd = createAction(SET_SERVICE);\r\nexport const setStatus = createAction(SET_STATUS);\r\nexport const setPeriod = createAction(SET_PERIOD);\r\nexport const getLogData = createAction(GET_LOGDATA, getLogStats);\r\n\r\nconst initialState = {\r\n    serviceCd: '',\r\n    status: '',\r\n    period: '',\r\n    data: {\r\n        result: 'FAIL'\r\n    },\r\n};\r\n\r\nexport default handleActions({\r\n    [SET_SERVICE]: (state, { payload }) => {\r\n        return produce(state, draft => {\r\n            draft.id = payload;\r\n        })\r\n    },\r\n    [SET_STATUS]: (state, { payload }) => {\r\n        return produce(state, draft => {\r\n            draft.pw = payload;\r\n        });\r\n    },\r\n    ...pender({\r\n        type: GET_LOGDATA,\r\n        onSuccess: (state, { payload: { data } }) => { \r\n            const { result } = data;\r\n\r\n            return produce(state, draft => {\r\n                if(result === \"FAIL\") {\r\n                    draft.id = '';\r\n                    draft.pw = '';\r\n                }\r\n                draft.data.result = result;\r\n            });\r\n        },\r\n        onFailure: (state, { payload: { response } }) => { \r\n            alert('서버 에러! 관리자에게 문의하세요');\r\n        },\r\n    })\r\n}, initialState);","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as statsActions from '../modules/stats';\r\n\r\nclass StatisticsContainer extends Component {\r\n    static propTypes = {\r\n        serviceCd: PropTypes.string.isRequired,\r\n        status: PropTypes.string.isRequired,\r\n        period: PropTypes.string.isRequired,\r\n        StatsActions: PropTypes.object.isRequired,\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const { serviceCd, status, period, StatsActions } = this.props;\r\n        try{\r\n            const response = await StatsActions.getLogData({serviceCd, status, period});\r\n            const { result, message } = response.data;\r\n    \r\n            if(result === \"SUCCESS\") {\r\n                \r\n            } else {\r\n                console.error(response);\r\n                alert(message);\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n            alert(\"관리자에게 문의하세요!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment></Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        serviceCd: state.stats.serviceCd,\r\n        status: state.stats.serviceCd,\r\n        period: state.stats.period,\r\n    }),\r\n    (dispatch) => ({\r\n        StatsActions: bindActionCreators(statsActions, dispatch),\r\n    })\r\n)(StatisticsContainer);","import React, { Fragment } from 'react';\r\nimport { Title } from '../../components/Main/Home/';\r\nimport StatisticsContainer from '../../containers/StatisticsContainer';\r\n\r\nconst Statistics = () => {\r\n    return (\r\n        <Fragment>\r\n            <Title>도착한 메시지 전체 로그</Title>\r\n            <StatisticsContainer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\n\r\nclass Setting extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                SETTING\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Setting;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport withCheckAuth from '../lib/withCheckAuth';\r\nimport MainTemplate from '../components/Main/MainTemplate';\r\nimport Header from '../components/Main/Header';\r\nimport { Home, Graph, Statistics, Setting } from './main/';\r\nimport { NotFound } from 'pages';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <MainTemplate header={<Header/>}>\r\n            <Switch>\r\n                <Route path=\"/main/home\" component={Home}></Route>\r\n                <Route path=\"/main/graph\" component={Graph}></Route>\r\n                <Route path=\"/main/stats\" component={Statistics}></Route>\r\n                <Route path=\"/main/setting\" component={Setting}></Route>\r\n                <Route component={NotFound}/>\r\n            </Switch>\r\n        </MainTemplate>\r\n    );\r\n};\r\n\r\nexport default withCheckAuth(Main);","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            Not Found\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { Login, Main, NotFound } from 'pages';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  background-image: url(https://cdn.ppomppu.co.kr/zboard/data3/2018/0903/20180903000708_lphnknbp.jpg);\r\n  background-size: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login}/>\r\n          <Route path=\"/login\" component={Login}/>\r\n          <Route path=\"/main\" component={Main}/>\r\n          <Route component={NotFound}/>\r\n        </Switch>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nexport default class Root extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { penderReducer } from 'redux-pender';\r\nimport login from './login';\r\nimport stats from './stats';\r\n\r\nexport default combineReducers({\r\n    login,\r\n    stats,\r\n    pender: penderReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport modules from './modules';\r\nimport { createLogger } from 'redux-logger';\r\nimport penderMiddleware from 'redux-pender';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middlewares = [\r\n    createLogger(),\r\n    penderMiddleware()\r\n];\r\n\r\nconst store = createStore(\r\n    modules,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './Root';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store';\r\nimport './default.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <Root/>\r\n    </Provider>\r\n  , document.getElementById('root'));\r\n  \r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}